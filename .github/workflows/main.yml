name: Build & Release

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
  
  build_release:
    name: Build Release
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        platform: [windows, linux, mac, android, ios]
        include:
          - platform: windows
            os: windows-latest
          - platform: linux
            os: ubuntu-latest
          - platform: mac
            os: macos-latest
          - platform: android
            os: ubuntu-latest
          - platform: ios
            os: macos-latest
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      
      # Set up the machines

      - name: Install Linux Packages
        if: matrix.platform == 'linux'
        run: sudo apt-get install ninja-build libgtk-3-dev

      - uses: actions/setup-java@v1
        if: matrix.platform == 'android'
        with:
          java-version: 12.x

      - uses: subosito/flutter-action@v1
        with:
          channel: stable

      - name: Install Pub Dependencies
        run: flutter pub get

      - name: Run Build Runner
        run: dart run build_runner build --delete-conflicting-outputs
      

      # Build Apps

      - name: Build Windows
        if: matrix.platform == 'windows'
        run: flutter build windows --release
      
      - name: Build Linux
        if: matrix.platform == 'linux'
        run: flutter build linux --release
        
      - name: Build MacOS
        if: matrix.platform == 'mac'
        run: flutter build macos --release

      - name: Build Android
        if: matrix.platform == 'android'
        run: flutter build apk --release --split-per-abi
      
      - name: Build iOS
        if: matrix.platform == 'ios'
        run: flutter build ipa --release

      
      # Zip Desktop Apps

      - name: Create Windows Zip
        if: matrix.platform == 'windows'
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: tagr-windows-${{github.ref_name}}.zip
          path: "build/windows/x64/runner/Release"
      
      - name: Create Linux Zip
        if: matrix.platform == 'linux'
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: tagr-linux-${{github.ref_name}}.zip
          path: "build/linux/x64/release/bundle/tagr"

      - name: Create MacOS Zip
        if: matrix.platform == 'mac'
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: tagr-macos-${{github.ref_name}}.app.zip
          path: "build/macos/Build/Products/Release/tagr.app"
      
      
      # Release builds
        
      - name: Release Windows
        if: matrix.platform == 'windows'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: tagr-windows-${{github.ref_name}}.zip
      
      - name: Release Linux
        if: matrix.platform == 'linux'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: tagr-linux-${{github.ref_name}}.zip
      
      - name: Release MacOS
        if: matrix.platform == 'mac'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: tagr-macos-${{github.ref_name}}.app.zip
      
      - name: Release Android
        if: matrix.platform == 'android'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: build/app/outputs/apk/release/*
      
      - name: Release iOS
        if: matrix.platform == 'ios'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: build/app/outputs/ipa/release/*
