name: Build & Release

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          allowUpdates: true
  
  build_release:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
          - os: windows-latest
            release_suffix: windows
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      
      # Set up the machines

      - uses: actions/setup-java@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          java-version: 12.x

      - uses: subosito/flutter-action@v1
        with:
          channel: stable

      - name: Install Dependencies
        run: flutter pub get

      - name: Build intermediates
        run: dart run build_runner build --delete-conflicting-outputs
      

      # Build Apps

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: flutter build windows --release
      
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: flutter build linux --release
      
      - name: Build Android
        if: matrix.os == 'ubuntu-latest'
        run: flutter build apk --release --split-per-abi
      
      - name: Build MacOS
        if: matrix.os == 'macos-latest'
        run: flutter build macos --release
      
      - name: Build iOS
        if: matrix.os == 'macos-latest'
        run: flutter build ipa --release

      
      # Collect Artifacts

      - name: Create Windows Archive
        if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: tagr-windows-${{github.ref_name}}.zip
          directory: "build/windows/x64/runner/Release"
      
      
        
        
      - name: Release Windows
        if: matrix.os == 'windows-latest'
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: build/windows/x64/runner/Release/tagger-windows-${{github.ref_name}}.zip
      
      - name: Release Android
        if: matrix.os == 'ubuntu-latest'
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: build/app/outputs/apk/release/*
